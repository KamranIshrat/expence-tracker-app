{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpences.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpences","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlfor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9ac0ac8.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>Expence Tracker</h2>\n        \n        \n    )\n}","export default (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !==\n                    action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n\n        default:\n            return state;\n\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n    transactions:[]\n}\n\n// creat context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        \n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        });\n    }\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n\n    }}>\n        {children}\n        </GlobalContext.Provider>);\n    }","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n        <h4>Your Balance</h4>\n        <h1>${total}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const IncomeExpences = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n    <p className=\"money minus\">{expense}</p>\n        </div>\n      </div>\n    )\n}\n","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n  \n  return (\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n        {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span><button\n        onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</\n        button>\n      </li>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n  \n  return (\n        <>\n        <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction=\n        {transaction} /> ))}\n      </ul>\n        </>\n    )\n}","import React, {useState, useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const { addTransaction } = useContext (GlobalContext);\n\n    const onSubmit = e => {\n      e.preventDefault();\n    \n\n    const newTransaction = {\n      id : Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    }\n\n    addTransaction(newTransaction);\n  }\n\n    return (\n        <>\n          <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}> \n        <div className=\"form-control\">\n          <label htmlfor=\"text\">Text</label>\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlfor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label\n          >\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>  \n        </>\n    )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance.js';\nimport { IncomeExpences } from './components/IncomeExpences.js';\nimport { TransactionList } from './components/TransactionList.js';\nimport { AddTransaction } from './components/AddTransaction.js';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    \n    <GlobalProvider>\n      \n      <Header />\n      <div className='container'>\n      \n        <Balance />\n        <IncomeExpences />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}